version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: ${PROJECT_NAME:-the-one-market}-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-chatdb}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-root}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ${PROJECT_NAME:-the-one-market}-backend-dev
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-chatdb}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - TRANSCRIPTION_URL=${TRANSCRIPTION_URL}
      - ENABLE_AI_RESPONSE=${ENABLE_AI_RESPONSE:-true}
      - IS_PROXY_API_ENABLED=${IS_PROXY_API_ENABLED:-false}
      - PROXY_API_KEY=${PROXY_API_KEY}
      - IS_IMAGE_GENERATION_ENABLED=${IS_IMAGE_GENERATION_ENABLED:-true}
      - RAG_API_URL=http://ml:5001
      - MINIMAX_API_KEY=${MINIMAX_API_KEY}
      - MINIMAX_GROUP_ID=${MINIMAX_GROUP_ID}
    depends_on:
      - postgres
      - ml
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ${PROJECT_NAME:-the-one-market}-frontend-dev
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    environment:
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  ml:
    build:
      context: ./ml
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-reclamaton}-ml-dev
    restart: unless-stopped
    ports:
      - "${RAG_PORT:-5001}:5001"
    environment:
      - RAG_PORT=5001
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PROXY_API_URL=${PROXY_API_URL}
      - PROXY_API_KEY=${PROXY_API_KEY}
    networks:
      - app-network
    volumes:
      - ./ml:/app

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: 
  pgadmin-data: